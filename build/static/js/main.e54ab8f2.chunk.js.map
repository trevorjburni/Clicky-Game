{"version":3,"sources":["components/Icons.js","assets/images/mario.png","assets/images/luigi.png","assets/images/bowser.png","assets/images/princess-peach.png","assets/images/toad.png","assets/images/yoshi.png","assets/images/wario.png","assets/images/link.png","assets/images/kirby.png","assets/images/fox-mccloud.png","assets/images/donkey-kong.png","assets/images/diddy-kong.png","components/FriendCard/index.js","components/Wrapper/index.js","components/Nav/index.js","App.js","index.js"],"names":["exports","mario","require","luigi","bowser","princessPeach","toad","yoshi","wario","link","kirby","fox","donkeyKong","diddyKong","module","FriendCard","props","className","onClick","cardClicked","id","alt","name","src","image","Wrapper","children","Nav","score","highscore","clickArr","highScoreMessage","whoopsMessage","App","state","friends","show","message","handleCardClicked","includes","setState","handleShow","newScore","push","shuffleFriends","handleClose","this","shuffle","arr","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","map","friend","key","Icons","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e54ab8f2.chunk.js","sourcesContent":["exports.mario = require(\"../assets/images/mario.png\");\nexports.luigi = require(\"../assets/images/luigi.png\");\nexports.bowser = require(\"../assets/images/bowser.png\");\nexports.princessPeach = require(\"../assets/images/princess-peach.png\");\nexports.toad = require(\"../assets/images/toad.png\");\nexports.yoshi = require(\"../assets/images/yoshi.png\");\nexports.wario = require(\"../assets/images/wario.png\");\nexports.link = require(\"../assets/images/link.png\");\nexports.kirby = require(\"../assets/images/kirby.png\");\nexports.fox = require(\"../assets/images/fox-mccloud.png\");\nexports.donkeyKong = require(\"../assets/images/donkey-kong.png\");\nexports.diddyKong = require(\"../assets/images/diddy-kong.png\");","module.exports = __webpack_public_path__ + \"static/media/mario.c8ae1643.png\";","module.exports = __webpack_public_path__ + \"static/media/luigi.7d1565d3.png\";","module.exports = __webpack_public_path__ + \"static/media/bowser.86d3bb82.png\";","module.exports = __webpack_public_path__ + \"static/media/princess-peach.109088f0.png\";","module.exports = __webpack_public_path__ + \"static/media/toad.a27d5953.png\";","module.exports = __webpack_public_path__ + \"static/media/yoshi.704f6fa2.png\";","module.exports = __webpack_public_path__ + \"static/media/wario.5f6bda24.png\";","module.exports = __webpack_public_path__ + \"static/media/link.321ca555.png\";","module.exports = __webpack_public_path__ + \"static/media/kirby.93952955.png\";","module.exports = __webpack_public_path__ + \"static/media/fox-mccloud.b7f270fe.png\";","module.exports = __webpack_public_path__ + \"static/media/donkey-kong.bb270da2.png\";","module.exports = __webpack_public_path__ + \"static/media/diddy-kong.a571efdd.png\";","import React from \"react\";\nimport \"./style.css\";\n\n// Need to add onClick ability to the card\nfunction FriendCard(props) {\n  return (\n      <div className=\"img-container\" onClick={() => props.cardClicked(props.id)}>\n          <img alt={props.name} src={props.image} />\n      </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n  return (  \n  <nav className=\"navbar\">\n    <h1 className=\"title\">Super Smash Bros Clicky Game</h1>\n    <span className=\"navbar-text\">Score: {props.score}</span>\n    <span className=\"navbar-text\">Highscore: {props.highscore}</span> \n    {props.children}\n  </nav>\n  );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Nav from \"./components/Nav\";\nimport friends from \"./friends.json\";\n// import Modal from \"./components/Modal\";\nimport Icons from \"./components/Icons\";\n\n// declare a global clickArr\nlet clickArr = [];\n\nconst highScoreMessage = \"Congrats! You achieved the highest possible score!\";\nconst whoopsMessage = \" Whoops, You've clicked that one already\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highscore: 0,\n    show: \"false\",\n    message: \"\"\n  };\n\n  // Set new array to the shuffled friends array\n  shuffleFriends() {\n    this.setState({\n      friends: this.shuffle(friends)\n    })\n  }\n\n  //An Array shuffle function\n  shuffle(arr) {\n    let currentIndex = arr.length;\n    let temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = arr[currentIndex];\n      arr[currentIndex] = arr[randomIndex];\n      arr[randomIndex] = temporaryValue;\n    }\n  \n    return arr;\n  \n  };\n\n  // Code out a onclick function that will change the state.friends.clicked to true\n  handleCardClicked = id => {\n\n    // If the card has already been selected, set score to 0, clear the clickArr and show modal\n    if (clickArr.includes(id)) {\n      this.setState({score: 0, message: whoopsMessage});\n      clickArr = [];\n      this.handleShow();\n    // else: increment the score, adjust highscore if it's the new highscore, add the card to clickArr, if highscore = 12, display modal\n    } else {\n      const newScore = this.state.score + 1;\n      this.setState({score: newScore})\n      if(this.state.highscore < newScore) {\n        this.setState({highscore: newScore});\n        if (this.state.highscore === 12) {\n          this.setState({message: highScoreMessage})\n          this.handleShow();\n        }\n      }\n      clickArr.push(id);\n    }\n    // Shuffle the cards\n    this.shuffleFriends();\n  }\n\n  handleShow = () => this.setState({show: \"true\"});\n\n  handleClose = () => this.setState({show: \"false\"});\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <div>\n        <Nav\n          score={this.state.score}\n          highscore={this.state.highscore}\n        />\n        <Wrapper>\n          {this.state.friends.map(friend => (\n          <FriendCard\n            cardClicked={this.handleCardClicked}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={Icons[friend.image]}\n          />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}